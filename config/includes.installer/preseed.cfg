# Header
#_preseed_V1

# Edu-Nix || preseed.cfg
# --------------------------------
# Edu-Nix pre-installation configuration file.
#
# See: https://wiki.debian.org/DebianInstaller/Preseed
# Authors: @MaxineToTheStars <https://github.com/MaxineToTheStars>
# ----------------------------------------------------------------

# Localization Selection
d-i debian-installer/locale string en_US

# Keyboard Selection
d-i keyboard-configuration/xkb-keymap select us

# Network Selection
d-i netcfg/enable boolean true
d-i netcfg/choose_interface select auto
d-i netcfg/disable_autoconfig boolean false

# DHCP failed falling back to manual configuration
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Set hostname and domain to whatever is currently available
#d-i netcfg/get_domain string unassigned-domain
#d-i netcfg/get_hostname string unassigned-hostname

# Firmware Settings
d-i hw-detect/load_firmware boolean true

# Mirror Settings
d-i mirror/https/proxy string
d-i mirror/protocol string https
d-i mirror/country string manual
d-i mirror/https/directory string /debian/
d-i mirror/https/hostname string deb.debian.org

# System Account Setup
d-i passwd/make-user boolean true
d-i passwd/root-login boolean true

# Root Account Setup
d-i passwd/root-password password root
d-i passwd/root-password-again password root

# User Account Setup
d-i passwd/username string mdcps-student
d-i passwd/user-password password student
d-i passwd/user-fullname string MDCPS-Student
d-i passwd/user-password-again password student
d-i passwd/user-default-groups string audio cdrom input optical storage uucp video

# Clock & Timezone Configuration
d-i clock-setup/ntp boolean true
d-i clock-setup/utc boolean true
d-i time/zone string America/Kentucky
d-i clock-setup/ntp-server string ntp.example.com

# Partitioning
# N/A

# Base System Installation
d-i base-installer/install-recommends boolean false
d-i base-installer/kernel/image string linux-image-686

# APT Configuration
d-i apt-setup/contrib boolean true
d-i apt-setup/non-free boolean true
d-i apt-setup/use_mirror boolean true
d-i apt-setup/cdrom/set-first boolean false
d-i apt-setup/non-free-firmware boolean true
d-i apt-setup/disable-cdrom-entries boolean true
d-i apt-setup/security_host string security.debian.org
d-i apt-setup/services-select multiselect security, updates

# Package Configuration
d-i pkgsel/upgrade select none
d-i pkgsel/run_tasksel boolean false
popularity-contest popularity-contest/participate boolean false

# Boatloader Configuration
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

# Force GRUB to just install
grub-pc grub2/force_efi_extra_removable boolean true

# Install extra packages || This is so cursed KMS
d-i preseed/late_command string apt-install apt-transport-https apt-utils bash ca-certificates curl firmware-linux-free firmware-linux-nonfree gpg intel-microcode kwin-wayland kwin-x11 libegl-mesa0 libgbm1 libgl1-mesa-dri libglapi-mesa libglx-mesa0 libosmesa6 libva2 libxatracker2 mesa-opencl-icd mesa-va-drivers mesa-vulkan-drivers plasma-desktop systemd wget
d-i preseed/late_command string in-target wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg && install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg && sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list' && rm -f packages.microsoft.gpg
d-i preseed/late_command string in-target curl -s https://s3.eu-central-1.amazonaws.com/jetbrains-ppa/0xA6E8698A.pub.asc | gpg --dearmor | sudo tee /usr/share/keyrings/jetbrains-ppa-archive-keyring.gpg > /dev/null && echo "deb [signed-by=/usr/share/keyrings/jetbrains-ppa-archive-keyring.gpg] http://jetbrains-ppa.s3-website.eu-central-1.amazonaws.com any main" | sudo tee /etc/apt/sources.list.d/jetbrains-ppa.list > /dev/null
d-i preseed/late_command string in-target wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub > linux_signing_key.pub && sudo install -D -o root -g root -m 644 linux_signing_key.pub /etc/apt/keyrings/linux_signing_key.pub && sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/linux_signing_key.pub] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
d-i preseed/late_command string in-target curl -fSsL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /usr/share/keyrings/microsoft-edge.gpg > /dev/null && echo 'deb [signed-by=/usr/share/keyrings/microsoft-edge.gpg] https://packages.microsoft.com/repos/edge stable main' | sudo tee /etc/apt/sources.list.d/microsoft-edge.list
d-i preseed/late_command string in-target wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null && gpg -n -q --import --import-options import-show /etc/apt/keyrings/packages.mozilla.org.asc | awk '/pub/{getline; gsub(/^ +| +$/,""); if($0 == "35BAA0B33E9EB396F59CA838C0BA5CE6DC6315A3") print "\nThe key fingerprint matches ("$0").\n"; else print "\nVerification failed: the fingerprint ("$0") does not match the expected one.\n"}' && echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null
d-i preseed/late_command string in-target apt-get update
d-i preseed/late_command string in-target apt-get install --assume-yes code firefox google-chrome-stable intellij-idea-community microsoft-edge-stable pycharm-community

# Generate GRUB configuration
d-i preseed/late_command string in-target grub-mkconfig -o /boot/grub/grub.cfg

# Finalization
d-i finish-install/reboot_in_progress note
d-i finish-install/keep-consoles boolean true
d-i debian-installer/exit/poweroff boolean true

# Extra
firmware-ipw2x00 firmware-ipw2x00/license/error error
firmware-ipw2x00 firmware-ipw2x00/license/accepted boolean true
